This is ucblogo.info, produced by makeinfo version 4.5 from
usermanual.texi.


File: ucblogo.info,  Node: INTERNATIONALIZATION,  Next: INDEX,  Prev: SPECIAL VARIABLES,  Up: Top

Internationalization
********************

Berkeley Logo has limited support for non-English-speaking users.
Alas, there is no Unicode support, and high-bit-on ASCII codes work in
some contexts but not others.

If you want to translate Berkeley Logo for use with another language,
there are three main things you have to do:

     	1. Primitive names
     	2. Error (and other) messages
     	3. Documentation

For primitive names, the easiest thing is to provide a startup file that
defines aliases for the English primitive names, using COPYDEF:

     COPYDEF "AVANT "FORWARD

This should take care of it, unless your language's name for one
primitive is spelled like the English name of a different primitive.
In that case you have to turn REDEFP on and be sure to copy the
non-conflicting name before overwriting the conflicting one!

"Primitives" that are actually in the Logo library, of course, can just
be replaced or augmented with native-language-named Logo procedures and
filenames.

Of course Logo programs will still not look like your native language if
the word order is dramatically different, especially if you don't put
verbs before their objects.

For error messages, there is a file named Messages in the logolib
directory with texts of messages, one per line.  You can replace this
with a file for your own language.  Do not add, delete, or reorder
lines; Logo finds messages by line number.  The sequences `%p', `%s',
and `%t' in these messages represent variable parts of the message and
should not be translated.  (%p `PRINT's the variable part, while %s
`SHOW's it - that is, the difference is about whether or not brackets
are shown surrounding a list.  %t means that the variable part is a C
text string rather than a Logo object.)  If you want to change the
order of two variable parts (no reorderable message has more than two),
you would for example replace the line

     %p doesn't like %s as input

with

     %+s is a lousy input to %p

The plus sign tells the message printer to reverse the order; you must
reverse the order of %p and %s, if both are used, to match.  The plus
sign goes just after the first percent sign in the message, which might
not be at the beginning of the line.  The sequence `\n' in a message
represents a newline; don't be fooled into thinking that the "n" is part
of the following word.

Some messages appear twice in the file; this isn't a mistake.  The two
spaces before "to" in "I don't know how  to" aren't a mistake either.
The message containing just "%p" is for user-provided error messages in
THROW "ERROR.  The message "  in %s\n%s" is the part of all error
messages that indicates where the error occurred if it was inside a
procedure; you might want to change the word "in" to your language.
"%s defined\n" is what LOAD prints for each procedure defined if the
variable LOADNOISILY is TRUE.  "to %p\nend\n\n" is what EDIT puts in the
temporary file if you ask to edit a procedure that isn't already
defined.

Also in the Messages file are lines containing only one word each; the
first of these is the word "true".  Some of these words are recognized
by Logo in user input; some are generated by Logo; some are both.  For
example, the words TRUE and FALSE are recognized as Boolean values by
IF and IFELSE, and are also generated by Logo as outputs from the
primitive predicates such as EQUALP.  The word END is recognized as the
end of a procedure definition, and may be generated when Logo
reconstructs a procedure body for PO or EDIT.  I've used capital
letters in this paragraph for easier reading, but the words in the
Messages file should be in lower case.

If you replace these with non-English words, Logo will *recognize* both
the English names and your alternate names.  For example, if you
replace the word "true" with "vrai" then Logo will understand both of
these:

     IF "TRUE [PRINT "YES]
     IF "VRAI [PRINT "YES]

The variable UseAlternateNames determines whether Logo will *generate*
other-language names - for example, whether predicate functions return
the other-language alternates for TRUE and FALSE.  This variable is
FALSE by default, meaning that the English words will be generated.

You might wish to have English-named predicate functions generate
English TRUE and FALSE, while other-language-named predicates generate
the alternate words.  This can be done by leaving UseAlternateNames
false, and instead of defining the other-language predicates with
COPYDEF, do it this way:

     to french.boolean :bool
     if equalp :bool "true [output "vrai]
     if equalp :bool "false [output "faux]
     output :bool	; shouldn't happen
     end
     
     to make.french.predicate :french :english :arity
     define :french `[[[inputs] ,[:arity]]
                      [output french.boolean
     			    apply ,[word "" :english] :inputs]]
     end
     
     ? make.french.predicate "egal? "equal? 2
     ? pr egal? 3 4
     faux
     ? pr egal? 4 4
     vrai
     ? pr equal? 3 4
     false
     ? pr equal? 4 4
     true

The third input to make.french.predicate is the number of inputs that
the predicate expects.  This solution isn't quite perfect because the
infix predicates (=, <, >) will still output in English.  If you want
them to generate alternate-language words, set UseAlternateNames to
TRUE instead.

Some of the words in this section of the Messages file are names of Logo
primitives (OUTPUT, STOP, GOTO, TAG, IF, IFELSE, TO, .MACRO).  To
translate these names, you must use COPYDEF as described earlier, in
addition to changing the names in Messages.  You should be consistent
in these two steps.  Don't forget the period in ".macro"!

For documentation, there are two kinds: this manual and the help files.
The latter are generated automatically from this manual if you have a
Unix system, so in that case you need only translate this manual,
maintaining the format.  (The automatic helpfile generator notices
things like capital letters, tabs, hyphens, and equal signs at the
beginnings of lines.)  The program makefile.c may require modification
because a few of the primitive names are special cases (e.g., LOG10 is
the only name with digits included).

If you don't have Unix tools, you can just translate each helpfile
individually.  A period in a primitive name is represented as a D in
the filename; there are no files for question marks because the HELP
command looks for the file named after the corresponding primitive that
ends in P.


File: ucblogo.info,  Node: INDEX,  Prev: INTERNATIONALIZATION,  Up: Top

INDEX
*****

* Menu:

* *:                                     PRODUCT.
* +:                                     SUM.
* -:                                     DIFFERENCE.
* .defmacro:                             dMACRO.
* .eq:                                   dEQ.
* .macro:                                dMACRO.
* .maybeoutput:                          dMAYBEOUTPUT.
* .setbf:                                dSETBF.
* .setfirst:                             dSETFIRST.
* .setitem:                              dSETITEM.
* .setsegmentsize:                       .SETSEGMENTSIZE.
* /:                                     QUOTIENT.
* <:                                     LESSP.
* <=:                                    LESSEQUALP.
* <>:                                    NOTEQUALP.
* =:                                     EQUALP.
* >:                                     GREATERP.
* >=:                                    GREATEREQUALP.
* `:                                     back-quote.
* allopen:                               ALLOPEN.
* allowgetset:                           ALLOWGETSET.
* AllowGetSet:                           GETTER/SETTER VARIBLE SYNTAX.
* and:                                   AND.
* apply:                                 APPLY.
* arc:                                   ARC.
* arctan:                                ARCTAN.
* arity:                                 ARITY.
* array:                                 ARRAY.
* array?:                                ARRAYP.
* arrayp:                                ARRAYP.
* arraytolist:                           ARRAYTOLIST.
* ascii:                                 ASCII.
* ashift:                                ASHIFT.
* back:                                  BACK.
* background:                            BACKGROUND.
* backslashed?:                          BACKSLASHEDP.
* backslashedp:                          BACKSLASHEDP.
* before?:                               BEFOREP.
* beforep:                               BEFOREP.
* bf:                                    BUTFIRST.
* bfs:                                   BUTFIRSTS.
* bg:                                    BACKGROUND.
* bitand:                                BITAND.
* bitnot:                                BITNOT.
* bitor:                                 BITOR.
* bitxor:                                BITXOR.
* bk:                                    BACK.
* bl:                                    BUTLAST.
* buried:                                BURIED.
* buried?:                               BURIEDP.
* buriedp:                               BURIEDP.
* bury:                                  BURY.
* buryall:                               BURYALL.
* buryname:                              BURYNAME.
* butfirst:                              BUTFIRST.
* butfirsts:                             BUTFIRSTS.
* butlast:                               BUTLAST.
* button:                                BUTTON.
* button?:                               BUTTONP.
* buttonp:                               BUTTONP.
* bye:                                   BYE.
* cascade:                               CASCADE.
* cascade.2:                             CASCADEd2.
* case:                                  CASE.
* case-insensitive:                      TOKENIZATION.
* caseignoredp:                          CASEIGNOREDP.
* catch:                                 CATCH.
* char:                                  CHAR.
* clean:                                 CLEAN.
* clearscreen:                           CLEARSCREEN.
* cleartext:                             CLEARTEXT.
* close:                                 CLOSE.
* closeall:                              CLOSEALL.
* co:                                    CONTINUE.
* combine:                               COMBINE.
* comments:                              TOKENIZATION.
* Computer_Science_Logo_Style:           OVERVIEW.
* cond:                                  COND.
* contents:                              CONTENTS.
* continue:                              CONTINUE.
* copydef:                               COPYDEF.
* Copyright:                             OVERVIEW.
* cos:                                   COS.
* count:                                 COUNT.
* crossmap:                              CROSSMAP.
* cs:                                    CLEARSCREEN.
* cslsload:                              CSLSLOAD.
* ct:                                    CLEARTEXT.
* cursor:                                CURSOR.
* define:                                DEFINE.
* defined?:                              DEFINEDP.
* definedp:                              DEFINEDP.
* delimiters:                            TOKENIZATION.
* dequeue:                               DEQUEUE.
* difference:                            DIFFERENCE.
* do.until:                              DOdUNTIL.
* do.while:                              DOdWHILE.
* dribble:                               DRIBBLE.
* ed:                                    EDIT.
* edall:                                 EDALL.
* edit:                                  EDIT.
* editfile:                              EDITFILE.
* editor:                                EDIT.
* edn:                                   EDN.
* edns:                                  EDNS.
* edpl:                                  EDPL.
* edpls:                                 EDPLS.
* edps:                                  EDPS.
* empty?:                                EMPTYP.
* emptyp:                                EMPTYP.
* eof?:                                  EOFP.
* eofp:                                  EOFP.
* epspict:                               EPSPICT.
* equal?:                                EQUALP.
* equalp:                                EQUALP.
* er:                                    ERASE.
* erall:                                 ERALL.
* erase:                                 ERASE.
* erasefile:                             ERASEFILE.
* erf:                                   ERASEFILE.
* ern:                                   ERN.
* erns:                                  ERNS.
* erpl:                                  ERPL.
* erpls:                                 ERPLS.
* erps:                                  ERPS.
* erract:                                ERRACT.
* error:                                 ERROR.
* errors:                                ERROR CODES.
* exp:                                   EXP.
* fd:                                    FORWARD.
* fence:                                 FENCE.
* file?:                                 FILEP.
* filep:                                 FILEP.
* fill:                                  FILL.
* filter:                                FILTER.
* find:                                  FIND.
* first:                                 FIRST.
* firsts:                                FIRSTS.
* for:                                   FOR.
* foreach:                               FOREACH.
* forever:                               FOREVER.
* form:                                  FORM.
* forward:                               FORWARD.
* fput:                                  FPUT.
* fs:                                    FULLSCREEN.
* fullprintp:                            FULLPRINTP.
* fullscreen:                            FULLSCREEN.
* fulltext:                              FULLTEXT.
* gc:                                    GC.
* gensym:                                GENSYM.
* getter:                                GETTER/SETTER VARIBLE SYNTAX.
* global:                                GLOBAL.
* goto:                                  GOTO.
* gprop:                                 GPROP.
* greater?:                              GREATERP.
* greaterequal?:                         GREATEREQUALP.
* greaterequalp:                         GREATEREQUALP.
* greaterp:                              GREATERP.
* heading:                               HEADING.
* help:                                  HELP.
* hideturtle:                            HIDETURTLE.
* home:                                  HOME.
* ht:                                    HIDETURTLE.
* if:                                    IF.
* ifelse:                                IFELSE.
* iff:                                   IFFALSE.
* iffalse:                               IFFALSE.
* ift:                                   IFTRUE.
* iftrue:                                IFTRUE.
* ignore:                                IGNORE.
* int:                                   INT.
* invoke:                                INVOKE.
* iseq:                                  ISEQ.
* item:                                  ITEM.
* key?:                                  KEYP.
* keyp:                                  KEYP.
* label:                                 LABEL.
* last:                                  LAST.
* leaving ucblogo:                       ENTERING AND LEAVING LOGO.
* left:                                  LEFT.
* less?:                                 LESSP.
* lessequal?:                            LESSEQUALP.
* lessequalp:                            LESSEQUALP.
* lessp:                                 LESSP.
* line-continuation:                     TOKENIZATION.
* list:                                  LIST.
* list?:                                 LISTP.
* listp:                                 LISTP.
* listtoarray:                           LISTTOARRAY.
* ln:                                    LN.
* load:                                  LOAD.
* loadnoisily:                           LOADNOISILY.
* loadpict:                              LOADPICT.
* local:                                 LOCAL.
* localmake:                             LOCALMAKE.
* log10:                                 LOG10.
* logohelp:                              HELP.
* lowercase:                             LOWERCASE.
* lput:                                  LPUT.
* lshift:                                LSHIFT.
* lt:                                    LEFT.
* macro?:                                MACROP.
* macroexpand:                           MACROEXPAND.
* macrop:                                MACROP.
* make:                                  MAKE.
* map:                                   MAP.
* map.se:                                MAPdSE.
* mdarray:                               MDARRAY.
* mditem:                                MDITEM.
* mdsetitem:                             MDSETITEM.
* member:                                MEMBER.
* member?:                               MEMBERP.
* memberp:                               MEMBERP.
* minus:                                 MINUS.
* modulo:                                MODULO.
* mousepos:                              MOUSEPOS.
* name:                                  NAME.
* name?:                                 NAMEP.
* namelist:                              NAMELIST.
* namep:                                 NAMEP.
* names:                                 NAMES.
* nodes:                                 NODES.
* nodribble:                             NODRIBBLE.
* norefresh:                             NOREFRESH.
* not:                                   NOT.
* notequal?:                             NOTEQUALP.
* notequalp:                             NOTEQUALP.
* number?:                               NUMBERP.
* numberp:                               NUMBERP.
* op:                                    OUTPUT.
* openappend:                            OPENAPPEND.
* openread:                              OPENREAD.
* openupdate:                            OPENUPDATE.
* openwrite:                             OPENWRITE.
* or:                                    OR.
* output:                                OUTPUT.
* palette:                               PALETTE.
* parse:                                 PARSE.
* pause:                                 PAUSE.
* pc:                                    PENCOLOR.
* pd:                                    PENDOWN.
* pe:                                    PENERASE.
* pen:                                   PEN.
* pencolor:                              PENCOLOR.
* pendown:                               PENDOWN.
* pendown?:                              PENDOWNP.
* pendownp:                              PENDOWNP.
* penerase:                              PENERASE.
* penmode:                               PENMODE.
* penpaint:                              PENPAINT.
* penpattern:                            PENSIZE.
* penreverse:                            PENREVERSE.
* pensize:                               PENSIZE.
* penup:                                 PENUP.
* pick:                                  PICK.
* plist:                                 PLIST.
* plist?:                                PLISTP.
* plistp:                                PLISTP.
* plists:                                PLISTS.
* pllist:                                PLLIST.
* po:                                    PO.
* poall:                                 POALL.
* pon:                                   PON.
* pons:                                  PONS.
* pop:                                   POP.
* popl:                                  POPL.
* popls:                                 POPLS.
* pops:                                  POPS.
* pos:                                   POS.
* pot:                                   POT.
* pots:                                  POTS.
* power:                                 POWER.
* pprop:                                 PPROP.
* ppt:                                   PENPAINT.
* pr:                                    PRINT.
* prefix:                                PREFIX.
* primitive?:                            PRIMITIVEP.
* primitivep:                            PRIMITIVEP.
* primitives:                            PRIMITIVES.
* print:                                 PRINT.
* printdepthlimit:                       PRINTDEPTHLIMIT.
* printout:                              PO.
* printwidthlimit:                       PRINTWIDTHLIMIT.
* procedure?:                            PROCEDUREP.
* procedurep:                            PROCEDUREP.
* procedures:                            PROCEDURES.
* product:                               PRODUCT.
* pu:                                    PENUP.
* push:                                  PUSH.
* px:                                    PENREVERSE.
* queue:                                 QUEUE.
* quoted:                                QUOTED.
* quotient:                              QUOTIENT.
* radarctan:                             RADARCTAN.
* radcos:                                RADCOS.
* radsin:                                RADSIN.
* random:                                RANDOM.
* rawascii:                              RAWASCII.
* rc:                                    READCHAR.
* rcs:                                   READCHARS.
* readchar:                              READCHAR.
* readchars:                             READCHARS.
* reader:                                READER.
* readlist:                              READLIST.
* readpos:                               READPOS.
* readrawline:                           READRAWLINE.
* readword:                              READWORD.
* redefp:                                REDEFP.
* reduce:                                REDUCE.
* refresh:                               REFRESH.
* remainder:                             REMAINDER.
* remdup:                                REMDUP.
* remove:                                REMOVE.
* remprop:                               REMPROP.
* repcount:                              REPCOUNT.
* repeat:                                REPEAT.
* rerandom:                              RERANDOM.
* reverse:                               REVERSE.
* right:                                 RIGHT.
* rl:                                    READLIST.
* round:                                 ROUND.
* rseq:                                  RSEQ.
* rt:                                    RIGHT.
* run:                                   RUN.
* runparse:                              RUNPARSE.
* runparsing:                            TOKENIZATION.
* runresult:                             RUNRESULT.
* rw:                                    READWORD.
* save:                                  SAVE.
* savel:                                 SAVEL.
* savepict:                              SAVEPICT.
* screenmode:                            SCREENMODE.
* scrunch:                               SCRUNCH.
* scrunch.dat:                           SETSCRUNCH.
* se:                                    SENTENCE.
* sentence:                              SENTENCE.
* setbackground:                         SETBACKGROUND.
* setbg:                                 SETBACKGROUND.
* setcslsloc:                            SETCSLSLOC.
* setcursor:                             SETCURSOR.
* seteditor:                             SETEDITOR.
* seth:                                  SETHEADING.
* setheading:                            SETHEADING.
* sethelploc:                            SETHELPLOC.
* setitem:                               SETITEM.
* setlibloc:                             SETLIBLOC.
* setmargins:                            SETMARGINS.
* setpalette:                            SETPALETTE.
* setpc:                                 SETPENCOLOR.
* setpen:                                SETPEN.
* setpencolor:                           SETPENCOLOR.
* setpenpattern:                         SETPENPATTERN.
* setpensize:                            SETPENSIZE.
* setpos:                                SETPOS.
* setprefix:                             SETPREFIX.
* setread:                               SETREAD.
* setreadpos:                            SETREADPOS.
* setscrunch:                            SETSCRUNCH.
* settc:                                 SETTEXTCOLOR.
* settemploc:                            SETTEMPLOC.
* setter:                                GETTER/SETTER VARIBLE SYNTAX.
* settextcolor:                          SETTEXTCOLOR.
* setwrite:                              SETWRITE.
* setwritepos:                           SETWRITEPOS.
* setx:                                  SETX.
* setxy:                                 SETXY.
* sety:                                  SETY.
* shell:                                 SHELL.
* show:                                  SHOW.
* shown?:                                SHOWNP.
* shownp:                                SHOWNP.
* showturtle:                            SHOWTURTLE.
* sin:                                   SIN.
* splitscreen:                           SPLITSCREEN.
* sqrt:                                  SQRT.
* ss:                                    SPLITSCREEN.
* st:                                    SHOWTURTLE.
* standout:                              STANDOUT.
* starting ucblogo:                      ENTERING AND LEAVING LOGO.
* startup:                               STARTUP.
* step:                                  STEP.
* stepped:                               STEPPED.
* stepped?:                              STEPPEDP.
* steppedp:                              STEPPEDP.
* stop:                                  STOP.
* substring?:                            SUBSTRINGP.
* substringp:                            SUBSTRINGP.
* sum:                                   SUM.
* tag:                                   TAG.
* temp:                                  EDIT.
* template:                              TEMPLATE-BASED ITERATION.
* test:                                  TEST.
* text:                                  TEXT.
* textscreen:                            TEXTSCREEN.
* thing:                                 THING.
* throw:                                 THROW.
* to:                                    TO.
* towards:                               TOWARDS.
* trace:                                 TRACE.
* traced:                                TRACED.
* traced?:                               TRACEDP.
* tracedp:                               TRACEDP.
* transfer:                              TRANSFER.
* ts:                                    TEXTSCREEN.
* turtlemode:                            TURTLEMODE.
* type:                                  TYPE.
* unbury:                                UNBURY.
* unburyall:                             UNBURYALL.
* unburyname:                            UNBURYNAME.
* unburyonedit:                          UNBURYONEDIT.
* unstep:                                UNSTEP.
* until:                                 UNTIL.
* untrace:                               UNTRACE.
* uppercase:                             UPPERCASE.
* usealternatenames:                     USEALTERNATENAMES.
* wait:                                  WAIT.
* while:                                 WHILE.
* window:                                WINDOW.
* word:                                  WORD.
* wordp:                                 WORDP.
* wrap:                                  WRAP.
* writepos:                              WRITEPOS.
* writer:                                WRITER.
* xcor:                                  XCOR.
* ycor:                                  YCOR.


