Help is available on the following:

`		edit		listtoarray	pops		setpen
<		editfile	ln		pos		setpencolor
=		edn		load		pot		setpensize
>		edns		loadnoisily	pots		setpos
-		edpl		loadpict	power		setprefix
/		edpls		local		pprop		setread
*		edps		localmake	prefix		setreadpos
+		emptyp		log10		primitivep	setscrunch
allopen		eofp		lowercase	print		.setsegmentsize
allowgetset	epspict		lput		printdepthlimit settemploc
and		.eq		lshift		printwidthlimit settextcolor
apply		equalp		.macro		procedurep	setwrite
arc		erall		macroexpand	procedures	setwritepos
arctan		erase		macrop		product		setx
arity		erasefile	make		push		setxy
array		ern		map		queue		sety
arrayp		erns		map.se		quoted		shell
arraytolist	erpl		.maybeoutput	quotient	show
ascii		erpls		mdarray		radarctan	shownp
ashift		erps		mditem		radcos		showturtle
back		erract		mdsetitem	radsin		sin
background	error		member		random		splitscreen
backslashedp	exp		memberp		rawascii	sqrt
beforep		fence		minus		readchar	standout
bitand		filep		modulo		readchars	startup
bitnot		fill		name		reader		step
bitor		filter		namelist	readlist	stepped
bitxor		find		namep		readpos		steppedp
buried		first		names		readrawline	stop
buriedp		firsts		nodes		readword	substringp
bury		for		nodribble	redefp		sum
buryall		foreach		norefresh	reduce		tag
buryname	forever		not		refresh		test
butfirst	form		numberp		remainder	text
butfirsts	forward		openappend	remdup		textscreen
butlast		fput		openread	remove		thing
bye		fullprintp	openupdate	remprop		throw
cascade		fullscreen	openwrite	repcount	to
case		fulltext	or		repeat		towards
caseignoredp	gc		output		rerandom	trace
catch		gensym		palette		reverse		traced
char		global		parse		right		tracedp
clean		goto		pause		round		transfer
clearscreen	gprop		pen		rseq		turtlemode
cleartext	greaterp	pencolor	run		type
close		heading		pendown		runparse	unbury
closeall	help		pendownp	runresult	unburyall
combine		hideturtle	penerase	save		unburyname
cond		home		penmode		savel		unburyonedit
contents	if		penpaint	savepict	unstep
continue	ifelse		penreverse	screenmode	until
copydef		iffalse		pensize		scrunch		untrace
cos		iftrue		penup		sentence	uppercase
count		ignore		pick		setbackground	usealternatenam
crossmap	int		plist		.setbf		wait
cursor		invoke		plistp		setcursor	while
define		iseq		plists		seteditor	window
definedp	item		pllist		.setfirst	word
.defmacro	keyp		po		setheading	wordp
dequeue		label		poall		sethelploc	wrap
difference	last		pon		setitem		writepos
do.until	left		pons		.setitem	writer
do.while	lessp		pop		setlibloc	xcor
dribble		list		popl		setmargins	ycor
edall		listp		popls		setpalette
